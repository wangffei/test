<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:util="http://www.springframework.org/schema/util"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="
	http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.3.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd 
    http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd 
	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
  ">

	<!-- 扫描Spring的action层，是映射生效 -->
	<context:component-scan base-package="com.action"></context:component-scan>
	
	
	<!-- multipartResolver -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="104857600" />
     	<property name="maxInMemorySize" value="4096" />
     	<property name="defaultEncoding" value="UTF-8"></property>
	</bean>
  
  
    <context:component-scan base-package="springfox"/>
    
	<!-- 中文处理 要在context下面 -->
	<mvc:annotation-driven>
		<mvc:message-converters>
			<bean class="org.springframework.http.converter.StringHttpMessageConverter">
				<property name="supportedMediaTypes">
					<list>
						<value>text/plain;charset=UTF-8</value>
					</list>
				</property>
			</bean>
			
			<bean
					class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter" />
		</mvc:message-converters>
	</mvc:annotation-driven>




	<!-- 进行配置日志生成文档 -->
	<!--将静态资源交由默认的servlet处理 -->
	<mvc:default-servlet-handler />


	<!--向容器自动注入配置 -->
	<!-- <context:annotation-config /> -->


	<!--自动扫描，使springMVC认为包下用了@controller注解的类是控制器 -->
	<!-- 自动扫描 @Controller 与 swagger.java -->
	<!-- <context:component-scan base-package="com.action,com.swagger" /> -->


	<!--重要！将你的SwaggerConfig配置类注入 -->
	<!-- <bean class="com.swagger.SwaggerConfig" /> -->


	<!--重要！配置swagger资源不被拦截 -->
	<!-- <mvc:resources mapping="swagger-ui.html" location="classpath:/META-INF/resources/" 
		/> <mvc:resources mapping="/webjars/**" location="classpath:/META-INF/resources/webjars/" 
		/> -->
	<mvc:resources location="classpath:/META-INF/resources/" mapping="swagger-ui.html"/>
    <mvc:resources location="classpath:/META-INF/resources/webjars/" mapping="/webjars/**"/>
	
		
    <!--  
	<mvc:interceptors>
	   <mvc:interceptor>
	      <mvc:mapping path="/api/**"/>
	      <bean class="com.api.bean.TokenIntercepter">
	         <property name="token" value="false"></property>
	      </bean>
	   </mvc:interceptor>
	</mvc:interceptors>	
   -->

	



</beans>  




  